{"version":3,"sources":["../../dist/index.es.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["_assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","classnames","fn","module","exports","createCommonjsModule","hasOwn","classNames","classes","arg","argType","push","Array","isArray","inner","key","join","default","window","styles","autocomplete-container","dawa-selected","autocompleteContainer","dawaSelected","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","index_es","props","value","rest","e","indexOf","getOwnPropertySymbols","__rest","containerEl","react","inputEl","current","mutationCallback","mutationsList","_i","mutationsList_1","mutation","attributeName","target","classList","contains","remove","add","selected","ul","li","MutationObserver","observe","attributes","childList","subtree","component","__webpack_require__","dawaAutocomplete","destroy","className","root","input","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","_this2","textValue","undefined","react_default","a","select","setState","tekst","Component","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f8820d0.chunk.js","sourcesContent":["import { createRef, useEffect, createElement } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_autocomplete-container__25-4u {\\n  /* relative position for at de absolut positionerede forslag får korrekt placering.*/\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.styles_autocomplete-container__25-4u input {\\n  /* Både input og forslag får samme bredde som omkringliggende DIV */\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.styles_autocomplete-container__25-4u ul {\\n  margin: 0.3em 0 0 0;\\n  padding: 0;\\n  text-align: left;\\n  border-radius: 0.3125em;\\n  background: #fcfcfc;\\n  box-shadow: 0 0.0625em 0.15625em rgba(0,0,0,.15);\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  z-index: 9999;\\n  overflow-y: auto;\\n  box-sizing: border-box;\\n}\\n\\n.styles_autocomplete-container__25-4u li {\\n  margin: 0;\\n  list-style: none;\\n  cursor: pointer;\\n  padding: 0.4em 0.6em;\\n  color: #333;\\n  border: 0.0625em solid #ddd;\\n  border-bottom-width: 0;\\n}\\n\\n.styles_autocomplete-container__25-4u li:first-child {\\n  border-top-left-radius: inherit;\\n  border-top-right-radius: inherit;\\n}\\n\\n.styles_autocomplete-container__25-4u li:last-child {\\n  border-bottom-left-radius: inherit;\\n  border-bottom-right-radius: inherit;\\n  border-bottom-width: 0.0625em;\\n}\\n\\n.styles_autocomplete-container__25-4u li.styles_dawa-selected__2TS5s,\\n.styles_autocomplete-container__25-4u li:hover {\\n  background: #f0f0f0;\\n}\\n\";\nvar styles = {\n  \"autocomplete-container\": \"styles_autocomplete-container__25-4u\",\n  \"dawa-selected\": \"styles_dawa-selected__2TS5s\",\n  \"autocompleteContainer\": \"styles_autocomplete-container__25-4u\",\n  \"dawaSelected\": \"styles_dawa-selected__2TS5s\"\n};\nstyleInject(css);\n\nfunction DawaAutocomplete2(props) {\n  var classes = props.classes,\n      value = props.value,\n      rest = __rest(props, [\"classes\", \"value\"]);\n\n  var containerEl = createRef();\n  var inputEl = createRef();\n\n  if (inputEl.current != null) {\n    inputEl.current.value = value;\n  }\n\n  var mutationCallback = function mutationCallback(mutationsList) {\n    for (var _i = 0, mutationsList_1 = mutationsList; _i < mutationsList_1.length; _i++) {\n      var mutation = mutationsList_1[_i];\n\n      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n        if (mutation.target.classList.contains('dawa-selected')) {\n          mutation.target.classList.remove('dawa-selected');\n          mutation.target.classList.add(styles['dawa-selected']);\n\n          if (classes && classes.selected) {\n            mutation.target.classList.add(classes.selected);\n          }\n        }\n\n        if (classes && classes.ul && mutation.target.classList.contains('dawa-autocomplete-suggestions') && !mutation.target.classList.contains(classes.ul)) {\n          mutation.target.classList.add(classes.ul);\n        }\n\n        if (classes && classes.li && mutation.target.classList.contains('dawa-autocomplete-suggestion') && !mutation.target.classList.contains(classes.li)) {\n          mutation.target.classList.add(classes.li);\n        }\n      }\n    }\n  };\n\n  useEffect(function () {\n    new MutationObserver(mutationCallback).observe(containerEl.current, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    var dawaAutocomplete2 = require('dawa-autocomplete2');\n\n    var component = dawaAutocomplete2.dawaAutocomplete(inputEl.current, _assign({}, rest));\n    return function () {\n      component.destroy();\n    };\n  }, []);\n  return createElement(\"div\", {\n    className: classnames(styles['autocomplete-container'], classes && classes.root),\n    ref: containerEl\n  }, createElement(\"input\", {\n    className: classnames(classes && classes.input),\n    type: \"text\",\n    ref: inputEl\n  }));\n}\n\nexport default DawaAutocomplete2;","import React, { Component } from 'react'\n\nimport DawaAutocomplete2 from 'dawa-autocomplete2-react'\nimport { timeStamp } from 'console'\n\n\ninterface AppProps {\n}\n\ninterface AppState {\n  value?: string;\n}\n\n\nexport default class App extends Component<AppProps, AppState> {\n\n  constructor(props: any){\n    super(props)\n    this.state = {\n      value: 'Lyngbyvej'\n    }\n\n  }\n  render () {\n\n\n    let textValue = ''\n\n    if(this.state.value != undefined){\n      textValue = this.state.value\n    }\n    return (\n      <DawaAutocomplete2 \n      select={(selected) => {\n          this.setState({\n            value: selected.tekst\n          })\n      }}\n      value={textValue}\n      classes={{\n        root: 'root',\n        input: 'input',\n        ul: 'ul',\n        li: 'li',\n        selected: 'selected'\n      }}\n      />\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}